swagger: '2.0'
info:
  description: Virtual Service API
  version: 2.4.1
  title: Virtual Service API
basePath: /
schemes:
  - http
  - https
produces:
  - application/json
paths:
  /virtualservices:
    post:
      tags:
        - VirtualServices
      summary: Create REST Mock service data for the Virtual services
      description: Create REST Mock service data
      operationId: "createMockRequest"
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: VirtualServiceRequest
          description: Create REST Mock service data
          required: true
          schema:
            $ref: '#/definitions/VirtualServiceRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VirtualServiceResponse'
        '400':
          description: Business Exception
          schema:
            $ref: '#/definitions/VirtualServiceStatus'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/VirtualServiceStatus'
      security:
        - basicAuth: []
    get:
      tags:
        - VirtualServices
      summary: Get all Mock service data
      description: Get All Mock service data
      operationId: "readAllMockRequest"
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/VirtualServiceRequest'
        '400':
          description: Business Exception
        '500':
          description: Server Error
      security:
        - basicAuth: []
  /virtualservices/{id}:
    get:
      tags:
        - VirtualServices
      summary: Get Mock service data
      description: Get Mock service data
      operationId: "readMockRequest"
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: Mock Request Id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VirtualServiceRequest'
        '400':
          description: Business Exception
        '500':
          description: Server Error
      security:
        - basicAuth: []
    delete:
      tags:
        - VirtualServices
      summary: Delete Mock service data
      description: Delete Mock service data
      operationId: "deleteMockRequest"
      produces:
        - application/json
      parameters:
        - name: "id"
          in: "path"
          description: Mock Request Id
          required: true
          type: integer
      responses:
        '204':
          description: OK
        '400':
          description: Business Exception
        '500':
          description: Server Error
      security:
        - basicAuth: []
securityDefinitions:
  basicAuth:
    description: HTTP Basic Authentication
    type: basic
definitions:
  VirtualServiceRequest:
    type: object
    required:
      - url
      - httpStatusCode
      - method
      - type
    properties:
      operationId:
        type: string
      httpStatusCode:
        type: string
      url:
        type: string
      method:
        type: string
      contentType:
        type: string
        desc: Mandatory for XML.. values are either XML or JSON or empty
      requestType:
        type: string
        desc: Mandatory for other then REST.
      type:
        type: string
        desc: "possible values are Response, Rule and Script"
      rule:
        anyOf:
          - type: string
          - type: array
            items: {}
          - type: object
        desc: "rule could be a groovy script or spring expression language business rule"
      input:
        anyOf:
          - type: string
          - type: array
            items: {}
          - type: object
      output:
        anyOf:
          - type: string
          - type: array
            items: {}
          - type: object
      availableParams:
        type: array
        items:
          $ref: "#/definitions/VirtualServiceKeyValue"
      headerParams:
        type: array
        items:
          $ref: "#/definitions/VirtualServiceHeaderKeyValue"
      excludeList:
        type: string
      resource:
        type: string
  VirtualServiceResponse:
    type: object
    required:
      - url
      - httpStatusCode
      - method
      - type
    properties:
      id:
        type: integer
        format: int64
      operationId:
        type: string
      httpStatusCode:
        type: string
      url:
        type: string
      method:
        type: string
      contentType:
        type: string
        desc: Mandatory for XML.. values are either XML or JSON or empty
      requestType:
        type: string
        desc: Mandatory for other then REST. possible values are KAFKA, REST, MQ, AMQ, SOAP
      type:
        type: string
        desc: "possible values are Response, Rule and Script"
      rule:
        type: string
        desc: "rule could be a groovy script or spring expression language business rule"
      input:
        anyOf:
          - type: string
          - type: array
            items: {}
          - type: object
      output:
        anyOf:
          - type: string
          - type: array
            items: {}
          - type: object
      availableParams:
        type: array
        items:
          $ref: "#/definitions/VirtualServiceKeyValue"
      headerParams:
        type: array
        items:
          $ref: "#/definitions/VirtualServiceHeaderKeyValue"
      excludeList:
        type: string
      resource:
        type: string
      mockStatus:
        $ref: "#/definitions/VirtualServiceStatus"
  VirtualServiceStatus:
    type: object
    required:
      - code
    properties:
      code:
        type: string
      message:
        type: string
  VirtualServiceKeyValue:
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
      value:
        type: string
      parameterType:
        type: string
        desc: "QUERY_PARAM and PATH_PARAM are valid values"
      type:
        type: string
  VirtualServiceHeaderKeyValue:
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
      value:
        type: string
      type:
        type: string