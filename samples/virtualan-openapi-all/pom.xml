<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.virtualan</groupId>
  <artifactId>Service-Virtualization-Open-Api</artifactId>
  <packaging>jar</packaging>
  <name>Service-Virtualization-Open-Api</name>
  <version>1.1.0</version>
  <properties>
    <java.version>1.8</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <virtualan.version>1.2.3</virtualan.version>
    <cucumber.version>1.2.5</cucumber.version>
    <hsqldb.version>2.5.0</hsqldb.version>
    <spring.boot.version>2.5.8</spring.boot.version>
    <groovy.version>3.0.7</groovy.version>
  </properties>
  <build>
    <finalName>sv-virtualan-rest-demo</finalName>
    <sourceDirectory>src/main/java</sourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>5.1.0</version>
        <executions>
          <execution>
            <id>uber-service-vs-api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>
                ${project.basedir}/src/main/resources/META-INF/resources/yaml/Uber/uber.yaml
              </inputSpec>
              <output>${project.basedir}/target/external/</output>
              <apiPackage>org.openapitools.virtualan.api</apiPackage>
              <modelPackage>org.openapitools.virtualan.to</modelPackage>
              <generatorName>spring</generatorName>
              <enablePostProcessFile>virtualan.txt</enablePostProcessFile>
              <configOptions>
                <virtualService>true</virtualService>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>Person-service-vs-api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>
                ${project.basedir}/src/main/resources/META-INF/resources/yaml/Person/person.yaml
              </inputSpec>
              <output>${project.basedir}/target/external/</output>
              <apiPackage>org.openapitools.virtualan.api</apiPackage>
              <modelPackage>org.openapitools.virtualan.to</modelPackage>
              <generatorName>spring</generatorName>
              <enablePostProcessFile>virtualan.txt</enablePostProcessFile>

              <configOptions>
                <virtualService>true</virtualService>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>risk-service-vs-api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>
                ${project.basedir}/src/main/resources/META-INF/resources/yaml/Risk/riskfactor.yaml
              </inputSpec>
              <output>${project.basedir}/target/external/</output>
              <apiPackage>org.openapitools.virtualan.api</apiPackage>
              <modelPackage>org.openapitools.virtualan.to</modelPackage>
              <generatorName>spring</generatorName>
              <skipValidateSpec>true</skipValidateSpec>
              <enablePostProcessFile>virtualan.txt</enablePostProcessFile>
              <configOptions>
                <virtualService>true</virtualService>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>pet-service-vs-api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>
                ${project.basedir}/src/main/resources/META-INF/resources/yaml/PetStore/petstore.yaml
              </inputSpec>
              <output>${project.basedir}/target/external/</output>
              <apiPackage>org.openapitools.virtualan.api</apiPackage>
              <modelPackage>org.openapitools.virtualan.to</modelPackage>
              <generatorName>spring</generatorName>
              <enablePostProcessFile>virtualan.txt</enablePostProcessFile>
              <configOptions>
                <virtualService>true</virtualService>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>sample-validate-vs-api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>
                ${project.basedir}/src/main/resources/META-INF/resources/yaml/Service/Service.yaml
              </inputSpec>
              <output>${project.basedir}/target/external/</output>
              <apiPackage>org.openapitools.virtualan.api</apiPackage>
              <modelPackage>org.openapitools.virtualan.to</modelPackage>
              <generatorName>spring</generatorName>
              <enablePostProcessFile>virtualan.txt</enablePostProcessFile>
              <configOptions>
                <virtualService>true</virtualService>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.basedir}/target/external/src/gen/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>${spring.boot.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <version>${spring.boot.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.skyscreamer</groupId>
          <artifactId>jsonassert</artifactId>
        </exclusion>
      </exclusions>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.12.6</version>
    </dependency>


    <!-- START Virtual Service API support -->
    <dependency>
      <groupId>io.virtualan</groupId>
      <artifactId>virtualization</artifactId>
      <version>${virtualan.version}</version>
    </dependency>

    <!-- HyperSQL DB -->
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>${hsqldb.version}</version>
    </dependency>
    <!-- END Virtual Service API support -->

    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>2.0.1.Final</version>
    </dependency>


    <!-- Setup BDD Test cases -->

    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>3.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-java8</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-junit</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-spring</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>

